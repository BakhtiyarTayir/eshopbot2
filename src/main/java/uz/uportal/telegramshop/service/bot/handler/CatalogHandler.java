package uz.uportal.telegramshop.service.bot.handler;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import uz.uportal.telegramshop.model.Category;
import uz.uportal.telegramshop.model.Product;
import uz.uportal.telegramshop.service.CategoryService;
import uz.uportal.telegramshop.service.ProductService;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
 */
@Component
public class CatalogHandler {
    
    private static final Logger logger = LoggerFactory.getLogger(CatalogHandler.class);
    private static final int PRODUCTS_PER_PAGE = 2;
    
    private final CategoryService categoryService;
    private final ProductService productService;
    
    // –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    private final Map<Long, String> currentCategory = new HashMap<>();
    private final Map<Long, Integer> currentPage = new HashMap<>();
    
    public CatalogHandler(CategoryService categoryService, ProductService productService) {
        this.categoryService = categoryService;
        this.productService = productService;
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
     * @param chatId ID —á–∞—Ç–∞
     * @return —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º
     */
    public SendMessage showCatalog(Long chatId) {
        logger.info("Showing catalog for user {}", chatId);
        
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        
        List<Category> categories = categoryService.getAllCategories();
        
        if (categories.isEmpty()) {
            message.setText("–ö–∞—Ç–∞–ª–æ–≥ –ø–æ–∫–∞ –ø—É—Å—Ç. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è —Ç–æ–≤–∞—Ä—ã!");
            return message;
        }
        
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();
        
        for (Category category : categories) {
            List<InlineKeyboardButton> rowInline = new ArrayList<>();
            InlineKeyboardButton categoryButton = new InlineKeyboardButton();
            categoryButton.setText(category.getName());
            categoryButton.setCallbackData("category:" + category.getSlug());
            rowInline.add(categoryButton);
            rowsInline.add(rowInline);
        }
        
        markupInline.setKeyboard(rowsInline);
        message.setReplyMarkup(markupInline);
        message.setText("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:");
        
        return message;
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @param chatId ID —á–∞—Ç–∞
     * @param categorySlug —Å–ª–∞–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @param page –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     * @return —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–æ–≤–∞—Ä–∞–º–∏
     */
    public List<Object> showCategoryProducts(Long chatId, String categorySlug, int page) {
        logger.info("Showing products for category: {}, page: {}", categorySlug, page);
        List<Object> messages = new ArrayList<>();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        currentCategory.put(chatId, categorySlug);
        currentPage.put(chatId, page);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        List<Product> products;
        if (categorySlug == null || categorySlug.isEmpty()) {
            products = productService.getAllProducts();
            logger.info("Fetched all products, total count: {}", products.size());
        } else {
            // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —Å–ª–∞–≥—É
            Category category = categoryService.getCategoryBySlug(categorySlug);
            if (category != null) {
                // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                products = productService.getProductsByCategory(category);
                logger.info("Fetched products for category {}, total count: {}", categorySlug, products.size());
            } else {
                logger.warn("Category not found for slug: {}", categorySlug);
                SendMessage message = new SendMessage();
                message.setChatId(chatId);
                message.setText("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
                messages.add(message);
                return messages;
            }
        }
        
        // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
        if (products.isEmpty()) {
            logger.info("No products found for category: {}", categorySlug);
            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            message.setText("–í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.");
            messages.add(message);
            return messages;
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        int startIndex = page * PRODUCTS_PER_PAGE;
        int endIndex = Math.min(startIndex + PRODUCTS_PER_PAGE, products.size());
        
        logger.info("Showing products from index {} to {}, total products: {}", startIndex, endIndex, products.size());
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ startIndex –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–ø–∏—Å–∫–∞
        if (startIndex >= products.size()) {
            logger.warn("Start index {} is out of bounds for products list with size {}", startIndex, products.size());
            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            message.setText("–ù–µ—Ç –±–æ–ª—å—à–µ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.");
            messages.add(message);
            return messages;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        List<Product> pageProducts = products.subList(startIndex, endIndex);
        logger.info("Page products count: {}", pageProducts.size());
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        for (int i = 0; i < pageProducts.size(); i++) {
            Product product = pageProducts.get(i);
            logger.info("Adding product message for product: {} (ID: {})", product.getName(), product.getId());
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ
            StringBuilder caption = new StringBuilder();
            caption.append("–ù–∞–∑–≤–∞–Ω–∏–µ: ").append(product.getName()).append("\n");
            caption.append("–¶–µ–Ω–∞: ").append(product.getPrice()).append(" $\n");
            caption.append("–ê—Ä—Ç–∏–∫—É–ª: ").append(String.format("%08d", product.getId())).append("\n");
            caption.append("–í –Ω–∞–ª–∏—á–∏–∏: ").append(product.getStock());
            
            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
            InlineKeyboardMarkup productMarkup = new InlineKeyboardMarkup();
            List<List<InlineKeyboardButton>> productRows = new ArrayList<>();
            
            // –ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å" - —Ç–µ–ø–µ—Ä—å –¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
            List<InlineKeyboardButton> buyRow = new ArrayList<>();
            InlineKeyboardButton buyButton = new InlineKeyboardButton();
            buyButton.setText("–ö—É–ø–∏—Ç—å");
            buyButton.setCallbackData("direct_buy:" + product.getId());
            buyRow.add(buyButton);
            productRows.add(buyRow);
            
            // –ö–Ω–æ–ø–∫–∞ "–í –∫–æ—Ä–∑–∏–Ω—É" - –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
            List<InlineKeyboardButton> cartRow = new ArrayList<>();
            InlineKeyboardButton cartButton = new InlineKeyboardButton();
            cartButton.setText("–í –∫–æ—Ä–∑–∏–Ω—É");
            cartButton.setCallbackData("add_to_cart:" + product.getId());
            cartRow.add(cartButton);
            productRows.add(cartRow);
            
            // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ–≤–∞—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –µ—Å—Ç—å –µ—â–µ —Ç–æ–≤–∞—Ä—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ"
            boolean isLastProduct = i == pageProducts.size() - 1;
            boolean hasMoreProducts = endIndex < products.size();
            
            if (isLastProduct && hasMoreProducts) {
                // –ö–Ω–æ–ø–∫–∞ "–°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ"
                List<InlineKeyboardButton> moreRow = new ArrayList<>();
                InlineKeyboardButton moreButton = new InlineKeyboardButton();
                moreButton.setText("üîΩ –°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ üîΩ");
                moreButton.setCallbackData("more");
                moreRow.add(moreButton);
                productRows.add(moreRow);
                logger.info("Adding 'See more' button to the last product (index: {})", i);
            }
            
            productMarkup.setKeyboard(productRows);
            
            // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–æ–º
            if (product.getImageUrl() != null && !product.getImageUrl().isEmpty()) {
                // –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
                SendPhoto photoMessage = new SendPhoto();
                photoMessage.setChatId(chatId);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ imageUrl —Å—Å—ã–ª–∫–æ–π –∏–ª–∏ fileId
                if (product.getImageUrl().startsWith("http")) {
                    photoMessage.setPhoto(new InputFile(product.getImageUrl()));
                } else {
                    photoMessage.setPhoto(new InputFile(product.getImageUrl()));
                }
                
                photoMessage.setCaption(caption.toString());
                photoMessage.setReplyMarkup(productMarkup);
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
                messages.add(photoMessage);
                logger.info("Added photo message for product: {}", product.getId());
            } else {
                // –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                SendMessage productMessage = new SendMessage();
                productMessage.setChatId(chatId);
                productMessage.setText(caption.toString());
                productMessage.setReplyMarkup(productMarkup);
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
                messages.add(productMessage);
                logger.info("Added text message for product: {}", product.getId());
            }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
        SendMessage navigationMessage = new SendMessage();
        navigationMessage.setChatId(chatId);
        
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();
        
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        List<InlineKeyboardButton> navigationRow = new ArrayList<>();
        InlineKeyboardButton backButton = new InlineKeyboardButton();
        backButton.setText("–ù–∞–∑–∞–¥ üîô");
        backButton.setCallbackData("back");
        navigationRow.add(backButton);
        
        // –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–∞—è"
        InlineKeyboardButton homeButton = new InlineKeyboardButton();
        homeButton.setText("üè† –ì–ª–∞–≤–Ω–∞—è");
        homeButton.setCallbackData("home");
        navigationRow.add(homeButton);
        
        rowsInline.add(navigationRow);
        markupInline.setKeyboard(rowsInline);
        navigationMessage.setReplyMarkup(markupInline);
        navigationMessage.setText("–ù–∞–≤–∏–≥–∞—Ü–∏—è");
        
        messages.add(navigationMessage);
        
        return messages;
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param chatId ID —á–∞—Ç–∞
     * @return —Ç–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
     */
    public String getCurrentCategory(Long chatId) {
        return currentCategory.get(chatId);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param chatId ID —á–∞—Ç–∞
     * @return —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
     */
    public Integer getCurrentPage(Long chatId) {
        return currentPage.get(chatId);
    }
    
    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param chatId ID —á–∞—Ç–∞
     * @param page –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    public void setCurrentPage(Long chatId, int page) {
        currentPage.put(chatId, page);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–æ–º
     * @param chatId ID —á–∞—Ç–∞
     * @param product —Ç–æ–≤–∞—Ä
     * @return —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–æ–º
     */
    private SendPhoto sendProductMessage(Long chatId, Product product) {
        SendPhoto photoMessage = new SendPhoto();
        photoMessage.setChatId(chatId);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        String caption = String.format(
                "–ù–∞–∑–≤–∞–Ω–∏–µ: %s\n–¶–µ–Ω–∞: %.2f $\n–ê—Ä—Ç–∏–∫—É–ª: %d\n–í –Ω–∞–ª–∏—á–∏–∏: %d",
                product.getName(),
                product.getPrice(),
                product.getId(),
                product.getStock()
        );
        photoMessage.setCaption(caption);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if (product.getImageUrl() != null && !product.getImageUrl().isEmpty()) {
            InputFile photo = new InputFile(product.getImageUrl());
            photoMessage.setPhoto(photo);
        } else {
            // –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
            InputFile photo = new InputFile("https://via.placeholder.com/400x300?text=No+Image");
            photoMessage.setPhoto(photo);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> productRows = new ArrayList<>();
        
        // –ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å" - –¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        List<InlineKeyboardButton> buyRow = new ArrayList<>();
        InlineKeyboardButton buyButton = new InlineKeyboardButton();
        buyButton.setText("–ö—É–ø–∏—Ç—å");
        buyButton.setCallbackData("direct_buy:" + product.getId());
        buyRow.add(buyButton);
        productRows.add(buyRow);
        
        // –ö–Ω–æ–ø–∫–∞ "–í –∫–æ—Ä–∑–∏–Ω—É" - –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
        List<InlineKeyboardButton> cartRow = new ArrayList<>();
        InlineKeyboardButton cartButton = new InlineKeyboardButton();
        cartButton.setText("–í –∫–æ—Ä–∑–∏–Ω—É");
        cartButton.setCallbackData("add_to_cart:" + product.getId());
        cartRow.add(cartButton);
        productRows.add(cartRow);
        
        markupInline.setKeyboard(productRows);
        photoMessage.setReplyMarkup(markupInline);
        
        return photoMessage;
    }
} 