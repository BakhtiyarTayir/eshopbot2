package uz.uportal.telegramshop.service.bot.commands;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import uz.uportal.telegramshop.model.Category;
import uz.uportal.telegramshop.model.Product;
import uz.uportal.telegramshop.model.TelegramUser;
import uz.uportal.telegramshop.repository.TelegramUserRepository;
import uz.uportal.telegramshop.service.CategoryService;
import uz.uportal.telegramshop.service.ProductService;
import uz.uportal.telegramshop.service.bot.core.UpdateHandler;
import uz.uportal.telegramshop.service.bot.keyboards.KeyboardFactory;
import uz.uportal.telegramshop.service.bot.core.MessageSender;

import java.util.List;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 */
@Component
public class AdminPanelHandler implements UpdateHandler {
    
    private static final Logger logger = LoggerFactory.getLogger(AdminPanelHandler.class);
    private final TelegramUserRepository telegramUserRepository;
    private final KeyboardFactory keyboardFactory;
    private final ProductService productService;
    private final CategoryService categoryService;
    private final MessageSender messageSender;
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    private static final int PRODUCTS_PAGE_SIZE = 5;
    private static final int CATEGORIES_PAGE_SIZE = 5;
    private static final int USERS_PAGE_SIZE = 10;
    
    public AdminPanelHandler(
            TelegramUserRepository telegramUserRepository,
            KeyboardFactory keyboardFactory,
            ProductService productService,
            CategoryService categoryService,
            MessageSender messageSender) {
        this.telegramUserRepository = telegramUserRepository;
        this.keyboardFactory = keyboardFactory;
        this.productService = productService;
        this.categoryService = categoryService;
        this.messageSender = messageSender;
    }
    
    @Override
    public boolean canHandle(Update update) {
        if (!update.hasMessage() || !update.getMessage().hasText()) {
            return false;
        }
        
        String text = update.getMessage().getText();
        return text.equals("‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å") || 
               text.equals("üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤") || 
               text.equals("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä") || 
               text.equals("üóÇ –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π") || 
               text.equals("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é") || 
               text.equals("üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏") || 
               text.equals("üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π") || 
               text.equals("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
    }
    
    @Override
    public BotApiMethod<?> handle(Update update) {
        Message message = update.getMessage();
        Long chatId = message.getChatId();
        String text = message.getText();
        
        logger.info("Handling admin panel button: {} for chatId: {}", text, chatId);
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        TelegramUser user = telegramUserRepository.findById(chatId)
                .orElse(null);
        
        if (user == null) {
            return createTextMessage(chatId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start");
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        if (!"ADMIN".equals(user.getRole()) && !"MANAGER".equals(user.getRole())) {
            return createTextMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.");
        }
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        switch (text) {
            case "‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å":
                return handleAdminPanel(chatId);
            case "üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤":
                return handleProductsList(chatId, 1);
            case "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä":
                return handleAddProduct(chatId);
            case "üóÇ –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π":
                return handleCategoriesList(chatId, 1);
            case "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é":
                return handleAddCategory(chatId);
            case "üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏":
                return handleOrdersManagement(chatId);
            case "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π":
                return handleUsersList(chatId, 1);
            case "‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                return handleBackToMainMenu(chatId, user);
            default:
                // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
                logger.warn("Unrecognized admin panel command: {}", text);
                return createTextMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.");
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"
     * @param chatId ID —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleAdminPanel(Long chatId) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText("‚öôÔ∏è *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n" +
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:");
        sendMessage.setParseMode("Markdown");
        sendMessage.setReplyMarkup(keyboardFactory.createAdminPanelKeyboard());
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤"
     * @param chatId ID —á–∞—Ç–∞
     * @param page –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     * @return —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä–æ–≤
     */
    private BotApiMethod<?> handleProductsList(Long chatId, int page) {
        Pageable pageable = PageRequest.of(page - 1, PRODUCTS_PAGE_SIZE);
        Page<Product> productsPage = productService.getAllProducts(pageable);
        
        // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
        if (productsPage.isEmpty()) {
            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(chatId);
            sendMessage.setText("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'.");
            return sendMessage;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        SendMessage headerMessage = new SendMessage();
        headerMessage.setChatId(chatId);
        headerMessage.setText("üìã *–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤* (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ " + page + " –∏–∑ " + productsPage.getTotalPages() + ")");
        headerMessage.setParseMode("Markdown");
        
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            messageSender.executeMessage(headerMessage);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            List<Product> products = productsPage.getContent();
            for (Product product : products) {
                StringBuilder productText = new StringBuilder();
                productText.append("*").append(product.getName()).append("*\n\n");
                productText.append("üí∞ –¶–µ–Ω–∞: ").append(product.getPrice()).append(" —Ä—É–±.\n");
                productText.append("üì¶ –í –Ω–∞–ª–∏—á–∏–∏: ").append(product.getStock()).append(" —à—Ç.\n");
                productText.append("üóÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ").append(product.getCategory() != null ? product.getCategory().getName() : "–ù–µ —É–∫–∞–∑–∞–Ω–∞").append("\n\n");
                productText.append("üìù –û–ø–∏—Å–∞–Ω–∏–µ: ").append(product.getDescription()).append("\n\n");
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                if (product.getImageUrl() != null && !product.getImageUrl().isEmpty()) {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
                    SendPhoto sendPhoto = new SendPhoto();
                    sendPhoto.setChatId(chatId);
                    sendPhoto.setPhoto(new InputFile(product.getImageUrl()));
                    sendPhoto.setCaption(productText.toString());
                    sendPhoto.setParseMode("Markdown");
                    sendPhoto.setReplyMarkup(keyboardFactory.createProductManagementKeyboard(product.getId()));
                    messageSender.executePhoto(sendPhoto);
                } else {
                    // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    SendMessage productMessage = new SendMessage();
                    productMessage.setChatId(chatId);
                    productMessage.setText(productText.toString());
                    productMessage.setParseMode("Markdown");
                    productMessage.setReplyMarkup(keyboardFactory.createProductManagementKeyboard(product.getId()));
                    messageSender.executeMessage(productMessage);
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                Thread.sleep(100);
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
            SendMessage paginationMessage = new SendMessage();
            paginationMessage.setChatId(chatId);
            paginationMessage.setText("–°—Ç—Ä–∞–Ω–∏—Ü–∞ " + page + " –∏–∑ " + productsPage.getTotalPages());
            paginationMessage.setReplyMarkup(keyboardFactory.createProductPaginationKeyboard(page, productsPage.getTotalPages()));
            messageSender.executeMessage(paginationMessage);
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É"
            SendMessage emptyMessage = new SendMessage();
            emptyMessage.setChatId(chatId);
            emptyMessage.setText("");
            return emptyMessage;
            
        } catch (Exception e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: {}", e.getMessage(), e);
            return createTextMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"
     * @param chatId ID —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleAddProduct(Long chatId) {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        TelegramUser user = telegramUserRepository.findById(chatId).orElse(null);
        if (user != null) {
            user.setState("ADDING_PRODUCT_NAME");
            telegramUserRepository.save(user);
        }
        
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:");
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"
     * @param chatId ID —á–∞—Ç–∞
     * @param page –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleCategoriesList(Long chatId, int page) {
        Pageable pageable = PageRequest.of(page - 1, CATEGORIES_PAGE_SIZE);
        Page<Category> categoriesPage = categoryService.getAllCategories(pageable);
        
        if (categoriesPage.isEmpty()) {
            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(chatId);
            sendMessage.setText("–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é'.");
            return sendMessage;
        }
        
        StringBuilder messageText = new StringBuilder();
        messageText.append("üóÇ *–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π* (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ").append(page).append(" –∏–∑ ").append(categoriesPage.getTotalPages()).append(")\n\n");
        
        List<Category> categories = categoriesPage.getContent();
        for (int i = 0; i < categories.size(); i++) {
            Category category = categories.get(i);
            messageText.append(i + 1).append(". *").append(category.getName()).append("*\n");
            messageText.append("   –û–ø–∏—Å–∞–Ω–∏–µ: ").append(category.getDescription() != null ? category.getDescription() : "–ù–µ —É–∫–∞–∑–∞–Ω–æ").append("\n\n");
        }
        
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText(messageText.toString());
        sendMessage.setParseMode("Markdown");
        sendMessage.setReplyMarkup(keyboardFactory.createCategoryPaginationKeyboard(page, categoriesPage.getTotalPages(), categories));
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
     * @param chatId ID —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleAddCategory(Long chatId) {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        TelegramUser user = telegramUserRepository.findById(chatId).orElse(null);
        if (user != null) {
            user.setState("ADDING_CATEGORY_NAME");
            telegramUserRepository.save(user);
        }
        
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:");
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏"
     * @param chatId ID —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleOrdersManagement(Long chatId) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText("üì¶ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏*\n\n" +
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.");
        sendMessage.setParseMode("Markdown");
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
     * @param chatId ID —á–∞—Ç–∞
     * @param page –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleUsersList(Long chatId, int page) {
        Pageable pageable = PageRequest.of(page - 1, USERS_PAGE_SIZE);
        Page<TelegramUser> usersPage = telegramUserRepository.findAll(pageable);
        
        if (usersPage.isEmpty()) {
            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(chatId);
            sendMessage.setText("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.");
            return sendMessage;
        }
        
        StringBuilder messageText = new StringBuilder();
        messageText.append("üë• *–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π* (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ").append(page).append(" –∏–∑ ").append(usersPage.getTotalPages()).append(")\n\n");
        
        List<TelegramUser> users = usersPage.getContent();
        for (int i = 0; i < users.size(); i++) {
            TelegramUser user = users.get(i);
            messageText.append(i + 1).append(". *").append(user.getFirstName()).append(" ").append(user.getLastName() != null ? user.getLastName() : "").append("*\n");
            messageText.append("   Username: @").append(user.getUsername() != null ? user.getUsername() : "–ù–µ —É–∫–∞–∑–∞–Ω").append("\n");
            messageText.append("   –†–æ–ª—å: ").append(user.getRole()).append("\n");
            messageText.append("   –¢–µ–ª–µ—Ñ–æ–Ω: ").append(user.getPhoneNumber() != null ? user.getPhoneNumber() : "–ù–µ —É–∫–∞–∑–∞–Ω").append("\n\n");
        }
        
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText(messageText.toString());
        sendMessage.setParseMode("Markdown");
        sendMessage.setReplyMarkup(keyboardFactory.createUserPaginationKeyboard(page, usersPage.getTotalPages()));
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
     * @param chatId ID —á–∞—Ç–∞
     * @param user –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleBackToMainMenu(Long chatId, TelegramUser user) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
        boolean isAdminOrManager = "ADMIN".equals(user.getRole()) || "MANAGER".equals(user.getRole());
        sendMessage.setReplyMarkup(keyboardFactory.createMainMenuKeyboard(isAdminOrManager));
        
        return sendMessage;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param chatId ID —á–∞—Ç–∞
     * @param text —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @return –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private SendMessage createTextMessage(Long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        return message;
    }
} 