package uz.uportal.telegramshop.service.bot.commands;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import uz.uportal.telegramshop.model.Category;
import uz.uportal.telegramshop.model.ShopSettings;
import uz.uportal.telegramshop.model.TelegramUser;
import uz.uportal.telegramshop.repository.TelegramUserRepository;
import uz.uportal.telegramshop.service.CartService;
import uz.uportal.telegramshop.service.CategoryService;
import uz.uportal.telegramshop.service.ShopSettingsService;
import uz.uportal.telegramshop.service.bot.core.UpdateHandler;
import uz.uportal.telegramshop.service.bot.keyboards.KeyboardFactory;

import java.util.ArrayList;
import java.util.List;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
 */
@Component
public class MainMenuHandler implements UpdateHandler {
    
    private static final Logger logger = LoggerFactory.getLogger(MainMenuHandler.class);
    private final TelegramUserRepository telegramUserRepository;
    private final KeyboardFactory keyboardFactory;
    private final CategoryService categoryService;
    private final CartService cartService;
    private final ShopSettingsService shopSettingsService;
    
    public MainMenuHandler(
            TelegramUserRepository telegramUserRepository,
            KeyboardFactory keyboardFactory,
            CategoryService categoryService,
            CartService cartService,
            ShopSettingsService shopSettingsService) {
        this.telegramUserRepository = telegramUserRepository;
        this.keyboardFactory = keyboardFactory;
        this.categoryService = categoryService;
        this.cartService = cartService;
        this.shopSettingsService = shopSettingsService;
    }
    
    @Override
    public boolean canHandle(Update update) {
        if (!update.hasMessage() || !update.getMessage().hasText()) {
            return false;
        }
        
        String text = update.getMessage().getText();
        return text.equals("üõç –ö–∞—Ç–∞–ª–æ–≥") || 
               text.equals("üõí –ö–æ—Ä–∑–∏–Ω–∞") || 
               text.equals("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è") || 
               text.equals("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞") || 
               text.equals("‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å");
    }
    
    @Override
    public BotApiMethod<?> handle(Update update) {
        Message message = update.getMessage();
        Long chatId = message.getChatId();
        String text = message.getText();
        
        logger.info("Handling main menu button: {} for chatId: {}", text, chatId);
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        TelegramUser user = telegramUserRepository.findById(chatId)
                .orElseGet(() -> {
                    TelegramUser newUser = new TelegramUser(
                            chatId,
                            message.getFrom().getUserName(),
                            message.getFrom().getFirstName(),
                            message.getFrom().getLastName()
                    );
                    return telegramUserRepository.save(newUser);
                });
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        switch (text) {
            case "üõç –ö–∞—Ç–∞–ª–æ–≥":
                return handleCatalog(chatId);
            case "üõí –ö–æ—Ä–∑–∏–Ω–∞":
                return handleCart(chatId, user);
            case "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
                return handleInfo(chatId);
            case "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
                return handleHelp(chatId);
            case "‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å":
                return handleAdminPanel(chatId, user);
            default:
                return null;
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–∞—Ç–∞–ª–æ–≥"
     * @param chatId ID —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleCatalog(Long chatId) {
        List<Category> categories = categoryService.getMainCategories();
        
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        
        if (categories.isEmpty()) {
            sendMessage.setText("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        } else {
            StringBuilder messageText = new StringBuilder();
            messageText.append("üìã *–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤*\n\n");
            messageText.append("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:\n\n");
            
            sendMessage.setText(messageText.toString());
            sendMessage.setParseMode("Markdown");
            sendMessage.setReplyMarkup(keyboardFactory.createCatalogKeyboard(categories));
        }
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ—Ä–∑–∏–Ω–∞"
     * @param chatId ID —á–∞—Ç–∞
     * @param user –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleCart(Long chatId, TelegramUser user) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        
        String cartInfo = cartService.getCartInfo(chatId);
        
        if (cartInfo.isEmpty()) {
            sendMessage.setText("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞.");
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥
            InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
            List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
            
            List<InlineKeyboardButton> row = new ArrayList<>();
            InlineKeyboardButton catalogButton = new InlineKeyboardButton();
            catalogButton.setText("üîç –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥");
            catalogButton.setCallbackData("catalog_categories");
            row.add(catalogButton);
            keyboard.add(row);
            
            keyboardMarkup.setKeyboard(keyboard);
            sendMessage.setReplyMarkup(keyboardMarkup);
        } else {
            sendMessage.setText("üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n" + cartInfo);
            sendMessage.setReplyMarkup(keyboardFactory.createCartKeyboard());
        }
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
     * @param chatId ID —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleInfo(Long chatId) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
        ShopSettings settings = shopSettingsService.getShopSettings();
        
        StringBuilder infoText = new StringBuilder();
        infoText.append("‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ*\n\n");
        infoText.append(settings.getAboutInfo()).append("\n\n");
        infoText.append("*–ö–æ–Ω—Ç–∞–∫—Ç—ã:*\n");
        infoText.append("üìû –¢–µ–ª–µ—Ñ–æ–Ω: ").append(settings.getPhone()).append("\n");
        infoText.append("üìß Email: ").append(settings.getEmail()).append("\n");
        infoText.append("üåê –°–∞–π—Ç: ").append(settings.getWebsite()).append("\n\n");
        infoText.append("*–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:*\n");
        infoText.append(settings.getWorkingHours());
        
        sendMessage.setText(infoText.toString());
        sendMessage.setParseMode("Markdown");
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"
     * @param chatId ID —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleHelp(Long chatId) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
        ShopSettings settings = shopSettingsService.getShopSettings();
        
        StringBuilder helpText = new StringBuilder();
        helpText.append("üìû *–ü–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n");
        helpText.append("*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n");
        helpText.append("üõç *–ö–∞—Ç–∞–ª–æ–≥* - –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤\n");
        helpText.append("üõí *–ö–æ—Ä–∑–∏–Ω–∞* - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π\n");
        helpText.append("‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è* - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ\n");
        helpText.append("üìû *–ü–æ–¥–¥–µ—Ä–∂–∫–∞* - –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏\n\n");
        helpText.append(settings.getSupportInfo()).append(" ").append(settings.getPhone());
        
        sendMessage.setText(helpText.toString());
        sendMessage.setParseMode("Markdown");
        
        return sendMessage;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"
     * @param chatId ID —á–∞—Ç–∞
     * @param user –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     * @return –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    private BotApiMethod<?> handleAdminPanel(Long chatId, TelegramUser user) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        if ("ADMIN".equals(user.getRole()) || "MANAGER".equals(user.getRole())) {
            sendMessage.setText("‚öôÔ∏è *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n" +
                    "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä–∞–º–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏.");
            sendMessage.setParseMode("Markdown");
            
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        } else {
            sendMessage.setText("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.");
        }
        
        return sendMessage;
    }
} 